What happens when you initialize a repository? Why do you need to do it? 

A new repository is made, with untracked history since there are no changes, and no commits (initial commit)

You need to create the repository because it adds the hidden meta files like .git, that makes it different from normal files.

How is the staging area different from the working directory and the repository? What value do you think it offers? 

The staging area is the intermediate step between the working directory and the repository. It's like the middle man.

You put files in that you want to commit from the working directory, and when you're ready, you commit them to the repository.

If you decide not to commit, you don't have to delete it from repository and just from the staging area. You can make sure you are making logical commits. 

How can you use the staging area to make sure you have one commit per logical change? 

You can use the git command, git diff --staged, to double check by comparing the staging area file to the most recent commit. 

If nothing comes up, there is no difference.

By doing this, you can make sure that your change you are about to commit is logical and significant. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are extremely powerful.

They are going to make my life so much easier, because you can make different versions of your projects, while keeping the 
original project in tact.

This allows you to be able to experiment.

You can create multiple versions, and still have your original one the same.

Very, very cool!!

How do the diagrams help you visualize the branch structure?

The diagrams help me keep track of which commits are parents of other commits, and lets me see which branches are reachable or unreachable by other branchs, and so I can know when I updated the branches and what will I need to merge, etc. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is that we create a new tip for the master branch, which
is a combined version of the new and master branch. 

We represent that in the diagram to show that all the commits will be interlaced with one another, sorted by order of time stamp.